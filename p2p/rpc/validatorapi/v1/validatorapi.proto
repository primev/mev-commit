syntax = "proto3";

package validatorapi.v1;

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "buf/validate/validate.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Validator API";
    version: "1.0.0-alpha";
    license: {
      name: "Business Source License 1.1";
      url: "https://github.com/primev/mev-commit/blob/main/LICENSE";
    };
  };
};

service Validator {
    // GetValidators
    //
    // GetValidators is called by the bidder to get the validators for a given epoch.
    rpc GetValidators(GetValidatorsRequest) returns (GetValidatorsResponse) {
        option (google.api.http) = {get: "/v1/validator/get_validators"};
    }
}

message GetValidatorsRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "GetValidatorsRequest";
            description: "Request for GetValidators to get info if the mev-commit validators will propose a block for a given epoch";
        }
    };
    uint64 epoch = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Epoch number for which to get the validators"
    }];
}

message SlotInfo {
    string BLSKey = 1;
    bool isOptedIn = 2;
}

message GetValidatorsResponse {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "GetValidatorsResponse";
            description: "Response for GetValidators";
        }
        example: "{\"items\": {\"1\": {\"BLSKey\": \"0x1234567890abcdef\", \"isOptedIn\": true}}}"
    };
    map<uint64, SlotInfo> items = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Map of slots numbers to validator bls key and isOptedIn boolean value"
    }]; 
}
