syntax = "proto3";

package bidderapi.v1;

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "google/protobuf/wrappers.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Bidder API";
    version: "1.0.0-alpha";
    license: {
      name: "Business Source License 1.1";
      url: "https://github.com/primev/mev-commit/blob/main/LICENSE";
    };
  };
};

service Bidder {
  // SendBid
  //
  // Send a bid to the bidder mev-commit node. The bid is a message from the bidder to the provider 
  // with the transaction hashes and the amount of ETH that the bidder is willing to pay to the provider
  // for including the transaction in the block. The bid also includes the block number that the bidder
  // wants to include the transaction in, the start and end timestamps for the bid decay. The bidder can
  // optionally include the raw transaction payloads (hex encoded RLP) instead of transaction hashes.
  rpc SendBid(Bid) returns (stream Commitment) {
    option (google.api.http) = {
      post: "/v1/bidder/bid"
      body: "*"
    };
  }

  // Deposit
  //
  // Deposit is called by the bidder node to add deposit in the bidder registry. The bidder can deposit
  // funds in a particular window by specifying the window number. If the window number is not specified,
  // the current block number is used to calculate the window number. If the block number is specified,
  // the window number is calculated based on the block number. If AutoDeposit is enabled, the deposit
  // API returns error.
  rpc Deposit(DepositRequest) returns (DepositResponse) {
    option (google.api.http) = {post: "/v1/bidder/deposit/{amount}"};
  }

  // AutoDeposit
  //
  // AutoDeposit is called by the bidder node to add a recurring deposit in the bidder registry. The bidder
  // can specify the amount of ETH to be deposited in each window. The bidder can also specify the start window
  // number for the deposit. If the start window number is not specified, the current block number is used to
  // calculate the window number. If the block number is specified, the window number is calculated based on
  // the block number. Once it is enabled, the node will automatically deposit the specified amount in each window
  // as well as withdraw the deposit from the previous window.
  rpc AutoDeposit(DepositRequest) returns (AutoDepositResponse) {
    option (google.api.http) = {post: "/v1/bidder/auto_deposit/{amount}"};
  }

  // CancelAutoDeposit
  //
  // CancelAutoDeposit is called by the bidder node to cancel the auto deposit. The bidder can specify if it
  // wants to withdraw the deposit from the current deposited windows. If the withdraw flag is set to true, the API will
  // wait till we can withdraw the deposit from the latest deposited window.
  rpc CancelAutoDeposit(CancelAutoDepositRequest) returns (CancelAutoDepositResponse) {
    option (google.api.http) = {post: "/v1/bidder/cancel_auto_deposit"};
  }

  // AutoDepositStatus
  //
  // AutoDepositStatus is called by the bidder node to get the status of the auto deposit.
  rpc AutoDepositStatus(EmptyMessage) returns (AutoDepositStatusResponse) {
    option (google.api.http) = {get: "/v1/bidder/auto_deposit_status"};
  }

  // WithdrawFromWindows
  //
  // WithdrawFromWindows is called by the bidder node to withdraw funds from multiple windows.
  rpc WithdrawFromWindows(WithdrawFromWindowsRequest) returns (WithdrawFromWindowsResponse) {
    option (google.api.http) = {
      post: "/v1/bidder/withdraw_from_windows"
      body: "*"
    };
  }

  // GetDeposit
  //
  // GetDeposit is called by the bidder to get its deposit in the bidder registry.
  rpc GetDeposit(GetDepositRequest) returns (DepositResponse) {
    option (google.api.http) = {
      get: "/v1/bidder/get_deposit"
    };
  }
  // Withdraw
  //
  // Withdraw is called by the bidder to withdraw deposit from the bidder registry.
  rpc Withdraw(WithdrawRequest) returns (WithdrawResponse) {
    option (google.api.http) = {post: "/v1/bidder/withdraw"};
  }
  // GetBidInfo
  //
  // GetBidInfo is called by the bidder to get the bid information. If block number is not specified,
  // all known block numbers are returned in the ascending order.
  rpc GetBidInfo(GetBidInfoRequest) returns (GetBidInfoResponse) {
    option (google.api.http) = {get: "/v1/bidder/get_bid_info"};
  }
  // ClaimSlashedFunds
  //
  // ClaimSlashedFunds is called by the bidder to claim slashed funds from the provider. The response
  // will show the amount claimed if any in wei.
  rpc ClaimSlashedFunds(EmptyMessage) returns (google.protobuf.StringValue) {
    option (google.api.http) = {post: "/v1/bidder/claim_slashed_funds"};
  }
}

message DepositRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Deposit request"
      description: "Deposit for bids to be issued by the bidder in wei."
      required: ["amount"]
    }
  };
  string amount = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Amount of ETH to be deposited in wei.",
    pattern: "[0-9]+",
    example: "1000000000000000000"
  }, (buf.validate.field).cel = {
      id: "amount",
      message: "amount must be a valid integer.",
      expression: "this.matches('^[1-9][0-9]*$')"
  }];
  google.protobuf.UInt64Value window_number = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Optional window number for querying deposit. If not specified, the current block number is used.",
      example: "1"
    }, (buf.validate.field).cel = {
      id: "window_number",
      message: "window_number must be a positive integer if specified.",
      expression: "this == null || (this > 0)"
    }];
  google.protobuf.UInt64Value block_number = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Optional block number for querying deposit. If specified, calculate window based on this block number.",
      example: "123456"
    }, (buf.validate.field).cel = {
      id: "block_number",
      message: "block_number must be a positive integer if specified.",
      expression: "this == null || (this > 0)"
    }];
};

message DepositResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Deposit response"
      description: "Deposit for bidder in the bidder registry for a particular window."
    }
    example: "{\"amount\": \"1000000000000000000\", \"window_number\": 1}"
  };
  string amount = 1;
  google.protobuf.UInt64Value window_number = 2;
};

message AutoDepositResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "AutoDeposit response"
      description: "Response on AutoDeposit request."
    }
    example: "{\"start_window_number\": \"1\", \"amount_per_window\": \"1000000000000000000\"}"
  };
  google.protobuf.UInt64Value start_window_number = 1;
  string amount_per_window = 2;
};

message AutoDepositStatusResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "AutoDeposit status response"
      description: "AutoDeposit status from the bidder registry."
    }
    example: "{\"window_balances\": [{\"depositedAmount\": \"1000000000000000000\", \"window_number\": 1}, {\"depositedAmount\": \"1000000000000000000\", \"window_number\": 2}, {\"depositedAmount\": \"1000000000000000000\", \"window_number\": 3}], \"isAutodepositEnabled\": true}"
  };
  repeated AutoDeposit window_balances = 1;
  bool is_autodeposit_enabled = 2;
};

message CancelAutoDepositRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "CancelAutoDeposit request"
      description: "Request to cancel AutoDeposit."
    }
  };
  bool withdraw = 1;
};

message CancelAutoDepositResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "CancelAutoDeposit response"
      description: "CancelAutoDeposit deposit from the bidder registry."
    }
    example: "{\"window_numbers\": [1, 2, 3]}"
  };
  repeated google.protobuf.UInt64Value window_numbers = 1;
};

message AutoDeposit {
  string depositedAmount = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Deposited amount of ETH in wei."
  }];
  google.protobuf.UInt64Value window_number = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Window number for the deposit."
  }];
  bool is_current = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Indicates if the window is the current window."
  }];
  google.protobuf.UInt64Value start_block_number = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The initial L1 block number for the window."
  }];
  google.protobuf.UInt64Value end_block_number = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The final L1 block number for the window."
  }];
}

message EmptyMessage {};

message GetDepositRequest {
  google.protobuf.UInt64Value window_number = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Optional window number for querying deposits. If not specified, the current block number is used."
    }, (buf.validate.field).cel = {
      id: "window_number",
      message: "window_number must be a positive integer if specified.",
      expression: "this == null || (this > 0)"
    }];
}

message WithdrawRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Withdraw request"
      description: "Withdraw deposit from the bidder registry."
    }
  };
  google.protobuf.UInt64Value window_number = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Optional window number for withdrawing deposits. If not specified, the last window number is used."
    }, (buf.validate.field).cel = {
      id: "window_number",
      message: "window_number must be a positive integer if specified.",
      expression: "this == null || (this > 0)"
    }];
};

message WithdrawResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Withdraw response"
      description: "Withdrawn deposit from the bidder registry."
    }
    example: "{\"amount\": \"1000000000000000000\", \"window_number\": 1 }"
  };
  string amount = 1;
  google.protobuf.UInt64Value window_number = 2;
};

message WithdrawFromWindowsRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Withdraw from multiple windows request"
      description: "Withdraw deposit from the bidder registry."
      required: ["window_numbers"]
    }
    example: "{\"window_numbers\": [1, 2, 3]}"
  };
  repeated google.protobuf.UInt64Value window_numbers = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Window numbers for withdrawing deposits."
    }, (buf.validate.field).cel = {
      id: "window_numbers",
      message: "window_numbers must be a valid array of positive integers.",
      expression: "this.all(r, r > 0) && size(this) > 0"
    }];
};

message WithdrawFromWindowsResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Withdraw from multiple windows response"
      description: "Withdrawn deposit from the bidder registry."
    }
    example: "{\"withdraw_responses\": [{\"amount\": \"1000000000000000000\", \"window_number\": 1 }, {\"amount\": \"1000000000000000000\", \"window_number\": 2 }, {\"amount\": \"1000000000000000000\", \"window_number\": 3 } ]}"
  };
  repeated WithdrawResponse withdraw_responses = 1;
};

message Bid {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Bid message"
      description: "Unsigned bid message from bidders to the bidder mev-commit node."
      required: ["amount", "block_number", "decay_start_timestamp", "decay_end_timestamp"]
    }
    example: "{\"tx_hashes\": [\"fe4cb47db3630551beedfbd02a71ecc69fd59758e2ba699606e2d5c74284ffa7\", \"71c1348f2d7ff7e814f9c3617983703435ea7446de420aeac488bf1de35737e8\"], \"amount\": \"1000000000000000000\", \"block_number\": 123456, \"decay_start_timestamp\": 1630000000, \"decay_end_timestamp\": 1630000000, \"reverting_tx_hashes\": [\"fe4cb47db3630551beedfbd02a71ecc69fd59758e2ba699606e2d5c74284ffa7\"], \"slash_amount\": \"500000000000000000\"}"
  };
  repeated string tx_hashes = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Hex string encoding of the hashes of the transactions that the bidder wants to include in the block."
    pattern: "[a-fA-F0-9]{64}"
  }, (buf.validate.field).cel = {
        id: "tx_hashes",
        message: "tx_hashes must be a valid array of transaction hashes.",
        expression: "this.all(r, r.matches('^(0x)?[a-fA-F0-9]{64}$'))"
  }];
  string amount = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Amount of ETH that the bidder is willing to pay to the provider for including the transaction in the block."
    pattern: "[0-9]+"
  }, (buf.validate.field).cel = {
      id: "amount",
      message: "amount must be a valid integer.",
      expression: "this.matches('^[1-9][0-9]*$')"
  }];
  int64 block_number = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Max block number that the bidder wants to include the transaction in."
  }, (buf.validate.field).cel = {
      id: "block_number",
      message: "block_number must be a valid integer.",
      expression: "uint(this) > 0"
  }];
  int64 decay_start_timestamp = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Timestamp at which the bid starts decaying."
  }, (buf.validate.field).cel = {
      id: "decay_start_timestamp",
      message: "decay_start_timestamp must be a valid integer.",
      expression: "uint(this) > 0"
  }];
  int64 decay_end_timestamp = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Timestamp at which the bid ends decaying."
  }, (buf.validate.field).cel = {
      id: "decay_end_timestamp",
      message: "decay_end_timestamp must be a valid integer.",
      expression: "uint(this) > 0"
  }];
  repeated string reverting_tx_hashes = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Optional array of tx hashes that are allowed to revert or be discarded."
  }, (buf.validate.field).cel = {
      id: "reverting_tx_hashes",
      message: "reverting_tx_hashes must be an array of valid transaction hashes.",
      expression: "this.all(r, r.matches('^(0x)?[a-fA-F0-9]{64}$'))"
  }];
  repeated string raw_transactions = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Optional array of RLP encoded raw signed transaction payloads that the bidder wants to include in the block."
  }, (buf.validate.field).cel = {
      id: "raw_transactions",
      message: "raw_transactions must be an array of valid raw transactions.",
      expression: "this.all(r, r.matches('^(0x)?[a-fA-F0-9]*$'))"
  }];
  string slash_amount = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Amount of ETH that will be slashed from the provider if they fail to include the transaction. If zero, the decayed bid amount is used for slashing."
    pattern: "[0-9]+"
  }, (buf.validate.field).cel = {
      id: "slash_amount",
      message: "slash_amount must be a valid integer.",
      expression: "this == '' || (this.matches('^[0-9]+$') && uint(this) >= 0)"
  }];
};

message Commitment {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Commitment message"
      description: "Commitment message from the provider to the bidder mev-commit node."
    }
  };
  repeated string tx_hashes = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Hex string encoding of the hash of the transaction that the bidder wants to include in the block."
    pattern: "[a-fA-F0-9]{64}"
  }];
  string bid_amount = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Amount of ETH that the bidder has agreed to pay to the provider for including the transaction in the block."
  }];
  int64 block_number = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Max block number that the bidder wants to include the transaction in."
  }];
  string received_bid_digest = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Hex string encoding of digest of the bid message signed by the bidder."
  }];
  string received_bid_signature = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Hex string encoding of signature of the bidder that sent this bid."
  }];
  string commitment_digest = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Hex string encoding of digest of the commitment."
  }];
  string commitment_signature = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Hex string encoding of signature of the commitment signed by the provider confirming this transaction."
  }];
  string provider_address = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Hex string encoding of the address of the provider that signed the commitment signature."
  }];
  int64 decay_start_timestamp = 9 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Timestamp at which the bid starts decaying."
  }];
  int64 decay_end_timestamp = 10 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Timestamp at which the bid ends decaying."
  }];
  int64 dispatch_timestamp = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Timestamp at which the commitment is published."
  }];
  repeated string reverting_tx_hashes = 12 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Optional array of tx hashes that are allowed to revert or be discarded."
  }];
  string slash_amount = 13 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Amount of ETH that will be slashed from the provider if they fail to include the transaction."
  }];
};

message GetBidInfoRequest {
  int64 block_number = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Optional block number for querying bid info. If not specified, all known block numbers are returned in ascending order."
  }];
  int32 page = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Page number for pagination."
  }];
  int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Number of items per page for pagination. Default is 50"
  }];
};

message GetBidInfoResponse {
  message CommitmentWithStatus {
    string provider_address = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Hex string encoding of the address of the provider that signed the commitment."
    }];
    int64 dispatch_timestamp = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Timestamp at which the commitment is published."
    }];
    string status = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Status of the commitment. Possible values: 'pending', 'stored', 'opened', 'settled', 'slashed', 'failed'."
    }];
    string details = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Additional details about the commitment status."
    }];
    string payment = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Payment amount in wei for the commitment."
    }];
    string refund = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Refund amount in wei for the commitment, if applicable."
    }];
  };
  message BidInfo {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        title: "Bid Info"
        description: "Information about a bid including its commitments."
      }
    };
    repeated string txn_hashes = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Hex string encoding of the hashes of the transactions that the bidder wants to include in the block."
      pattern: "[a-fA-F0-9]{64}"
    }];
    repeated string revertable_txn_hashes = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Optional array of tx hashes that are allowed to revert or be discarded."
      pattern: "[a-fA-F0-9]{64}"
    }];
    int64 block_number = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Block number that the bidder wants to include the transaction in."
    }];
    string bid_amount = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Amount of ETH that the bidder is willing to pay to the provider for including the transaction in the block."
      pattern: "[0-9]+"
    }];
    int64 decay_start_timestamp = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Timestamp at which the bid starts decaying."
    }];
    int64 decay_end_timestamp = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Timestamp at which the bid ends decaying."
    }];
    string bid_digest = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Hex string encoding of digest of the bid message signed by the bidder."
    }];
    string slash_amount = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Amount of ETH that will be slashed from the provider if they fail to include the transaction. If zero, the decayed bid amount is used for slashing."
      pattern: "[0-9]+"
    }];
    repeated CommitmentWithStatus commitments = 9;
  };
  message BlockBidInfo {
    int64 block_number = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Block number for which the bid info is requested."
    }];
    repeated BidInfo bids = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "List of bids for the specified block number."
    }];
  };

  repeated BlockBidInfo block_bid_info = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "List of block bid info containing bids and their commitments."
  }];
};
