swagger: "2.0"
info:
  title: Notifications API
  description: |-
    # Notification Topics

    ## peer_connected
    Emitted when a peer connects to the network.

    **Response structure:**
    ```json
    {
      "ethAddress": "0x...", // Ethereum address of the peer in hex format
      "type": "string"       // Type of the peer: "bootnode", "provider", or "bidder"
    }
    ```

    ## peer_disconnected
    Emitted when a peer disconnects from the network.

    **Response structure:**
    ```json
    {
      "ethAddress": "0x...", // Ethereum address of the peer in hex format
      "type": "string"       // Type of the peer: "bootnode", "provider", or "bidder"
    }
    ```

    ## validator_opted_in
    Emitted before an upcoming L1 block proposer has opted in to the mev-commit protocol. The "proposer-notify-offset" param configures how far in advance the notification is emitted.

    **Response structure:**
    ```json
    {
      "epoch": uint64,       // Epoch number
      "slot": uint64,        // Slot number
      "bls_key": "string"    // BLS key of the validator
    }
    ```

    ## epoch_validators_opted_in
    Emitted at the beginning of an epoch, specifying any slots where the L1 validator is opted-in to mev-commit.

    **Response structure:**
    ```json
    {
      "epoch": uint64,             // Epoch number
      "epoch_start_time": uint64,  // Timestamp of epoch start
      "slots": [                   // Array of opted-in slots
        {
          // opted-in slot details
        }
      ]
    }
    ```
  version: 1.0.0-alpha
  license:
    name: Business Source License 1.1
    url: https://github.com/primev/mev-commit/blob/main/LICENSE
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/subscribe:
    post:
      summary: Subscribe
      description: |-
        Subscribe to notifications for given topics. The client will receive notifications for the topics it has subscribed to.

        ### Available Topics
        - peer_connected: Emitted when a peer connects to the network
        - peer_disconnected: Emitted when a peer disconnects from the network
        - validator_opted_in: Emitted before an upcoming L1 block proposer has opted in to the mev-commit protocol. The "proposer-notify-offset" param configures how far in advance the notification is emitted
        - epoch_validators_opted_in: Emitted at the beginning of an epoch, specifying any slots where the L1 validator is opted-in to mev-commit.

        See the API description for response structure details.
      operationId: Notifications_Subscribe
      responses:
        "200":
          description: A successful response.(streaming responses)
          schema:
            type: object
            properties:
              result:
                $ref: '#/definitions/v1Notification'
              error:
                $ref: '#/definitions/googlerpcStatus'
            title: Stream result of v1Notification
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SubscribeRequest'
definitions:
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  protobufNullValue:
    type: string
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

       The JSON representation for `NullValue` is JSON `null`.
  v1Notification:
    type: object
    properties:
      topic:
        type: string
        example: peer_connected
        description: |-
          Topic of the notification. Available topics:

          - peer_connected: Response includes ethAddress and type
          - peer_disconnected: Response includes ethAddress and type
          - validator_opted_in: Response includes epoch, slot, and bls_key of the upcoming opted-in proposer
          - epoch_validators_opted_in: Response includes epoch, epoch_start_time, and opted-in slots array
        title: Topic of the notification
      value:
        type: object
        example:
          ethAddress: 0x123...
          type: provider
        description: |-
          Payload of the notification. Structure depends on the topic:

          - peer_connected: {"ethAddress": "0x...", "type": "bootnode|provider|bidder"}
          - peer_disconnected: {"ethAddress": "0x...", "type": "bootnode|provider|bidder"}
          - validator_opted_in: {"epoch": uint64, "slot": uint64, "bls_key": "string"} - Sent when an upcoming block proposer is opted-in
          - epoch_validators_opted_in: {"epoch": uint64, "epoch_start_time": uint64, "slots": []}
        title: Payload of the notification
    title: Notification represents a notification message sent to subscribers
  v1SubscribeRequest:
    type: object
    properties:
      topics:
        type: array
        example:
          - peer_connected
          - validator_opted_in
        items:
          type: string
        description: |-
          List of topics to subscribe to. Available topics:

          - peer_connected: Emitted when a peer connects to the network
          - peer_disconnected: Emitted when a peer disconnects from the network
          - validator_opted_in: Emitted before an upcoming L1 block proposer has opted in to the mev-commit protocol
          - epoch_validators_opted_in: Emitted at the beginning of an epoch, specifying any slots where the L1 validator is opted-in to mev-commit
        title: Topics to subscribe to
    title: SubscribeRequest represents a request to subscribe to notification topics
