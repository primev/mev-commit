# Values for deploying mev-commit-p2p bootnode with self-signed TLS and ESO for node secrets

global:
  # Docker image configuration
  image:
    repository: harshsingh07/flood
    tag: mev-commit-p2p-1.1.1
    pullPolicy: IfNotPresent
  
  # TLS certificate configuration
  tls:
    # Set to true to generate self-signed certificates
    selfSigned: true
  
  # External Secret Operator configuration
  externalSecrets:
    # Enable ESO for managing sensitive secrets
    enabled: true
    # Secret store reference configured in your cluster
    secretStore: "aws-cluster-secret-store"
    # Kind of secret store to use
    secretStoreKind: "ClusterSecretStore"
    # Key in secret store for node secrets
    nodeSecretKey: "mev-commit-node-secrets"
    # We don't need tlsSecretKey since we're using self-signed certificates
  
  # Keystore initialization
  initKeystore:
    enabled: true
    image:
      repository: ethereum/client-go
      tag: stable
      pullPolicy: IfNotPresent
  
  # Persistence configuration
  persistence:
    enabled: true
    storageClass: "premium-rwo"
    dataSize: "10Gi"
    keystoreSize: "1Gi"
  
  # Logging configuration
  logging:
    format: "json"
    level: "info"
    additionalTags: ""
  
  # Contract addresses
  contracts:
    bidderRegistry: "0x948eCD70FaeF6746A30a00F30f8b9fB2659e4062"
    providerRegistry: "0x1C2a592950E5dAd49c0E2F3A402DCF496bdf7b67"
    preconfStore: "0x8420F290a412D87Ae4Aa12be63e1836b91717910"
    blockTracker: "0x0b3b6Cf113959214E313d6Ad37Ad56831acb1776"
    validatorRouter: "0xFaF6F0d4bbc7bC33a4b403b274aBb82d0E794202"
  
  # Gas settings for transactions
  gas:
    limit: "2000000"
    tipCap: "50000000"
    feeCap: "60000000"
  
  # RPC endpoints
  rpc:
    settlementEndpoint: "https://chainrpc.testnet.mev-commit.xyz/"
    settlementWsEndpoint: ""
    l1Endpoint: "https://ethereum.publicnode.com"
  
  # Notifications
  notifications:
    bufferCapacity: "100"
  
  # Ethereum chain configuration
  laggardMode: "10"

# Node configuration 
node:
  # Node type set to bootnode
  type: "bootnode"
  # Number of replicas
  replicas: 1
  
  # Service configuration
  service:
    type: ClusterIP
    annotations: {}
  
  # Port configuration
  ports:
    http: 13523
    p2p: 13522
    rpc: 13524
  
  # Resource requests and limits
  resources:
    limits:
      cpu: 1000m
      memory: 2048Mi
    requests:
      cpu: 500m
      memory: 1024Mi
  
  # No need to set defaultKeystorePassword and defaultP2PSecret as they will come from ESO
  # But if ESO fails, these would be used as fallbacks
  defaultKeystorePassword: ""
  defaultP2PSecret: ""
