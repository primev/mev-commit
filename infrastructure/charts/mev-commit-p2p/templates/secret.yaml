{{- if .Values.global.tls.selfSigned }}
# Create self-signed certificate secret when selfSigned is enabled
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "mev-commit-p2p.fullname" . }}-tls
  labels:
    app.kubernetes.io/name: {{ include "mev-commit-p2p.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- include "mev-commit-p2p.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  {{- $altNames := list (printf "%s-%s" (include "mev-commit-p2p.fullname" .) .Values.node.type) (printf "%s-%s.%s" (include "mev-commit-p2p.fullname" .) .Values.node.type .Release.Namespace) (printf "%s-%s.%s.svc" (include "mev-commit-p2p.fullname" .) .Values.node.type .Release.Namespace) }}
  {{- $ca := genCA "mev-commit-ca" 365 }}
  {{- $cert := genSignedCert (include "mev-commit-p2p.fullname" .) nil $altNames 365 $ca }}
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
{{- end }}

{{- if and (not .Values.global.externalSecrets.enabled) (not .Values.node.existingSecret) }}
---
# Create default secrets if neither ESO nor existing secrets are specified
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "mev-commit-p2p.fullname" . }}-{{ .Values.node.type }}-secrets
  labels:
    app.kubernetes.io/name: {{ include "mev-commit-p2p.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ .Values.node.type }}
    {{- include "mev-commit-p2p.labels" . | nindent 4 }}
type: Opaque
data:
  MEV_COMMIT_KEYSTORE_PASSWORD: {{ .Values.node.defaultKeystorePassword | default "changeme" | b64enc }}
  MEV_COMMIT_SECRET: {{ .Values.node.defaultP2PSecret | default (printf "mev-commit-%s-secret" .Values.node.type) | b64enc }}
{{- end }}
