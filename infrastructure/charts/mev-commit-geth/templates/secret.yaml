{{- if and (eq .Values.role "signer") .Values.signer.password.externalSecret.enabled }}
# Password External Secret (required for both bootstrap methods)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.signer.password.secretName }}
  labels:
    {{- include "ethereum-poa.labels" . | nindent 4 }}
spec:
  refreshInterval: {{ .Values.signer.password.externalSecret.refreshInterval }}
  secretStoreRef:
    name: {{ .Values.signer.password.externalSecret.secretStoreRef.name }}
    kind: {{ .Values.signer.password.externalSecret.secretStoreRef.kind }}
  target:
    name: {{ .Values.signer.password.secretName }}
    creationPolicy: Owner
  data:
    - secretKey: password.txt
      remoteRef:
        key: {{ .Values.signer.password.externalSecret.awsSecretName }}
        property: password  # Specifies which key to extract from the JSON
---
{{- end }}

{{- if and (eq .Values.role "signer") (eq .Values.signer.nodeBootstrapMethod "signerPrivateKey") .Values.signer.signerPrivateKey.externalSecret.enabled }}
# Private Key External Secret (only for signerPrivateKey bootstrap method)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.signer.signerPrivateKey.secretName }}
  labels:
    {{- include "ethereum-poa.labels" . | nindent 4 }}
spec:
  refreshInterval: {{ .Values.signer.signerPrivateKey.externalSecret.refreshInterval }}
  secretStoreRef:
    name: {{ .Values.signer.signerPrivateKey.externalSecret.secretStoreRef.name }}
    kind: {{ .Values.signer.signerPrivateKey.externalSecret.secretStoreRef.kind }}
  target:
    name: {{ .Values.signer.signerPrivateKey.secretName }}
    creationPolicy: Owner
  data:
    - secretKey: signer-key
      remoteRef:
        key: {{ .Values.signer.signerPrivateKey.externalSecret.awsSecretName }}
        property: privateKey  # Specifies which key to extract from the JSON
---
{{- end }}
