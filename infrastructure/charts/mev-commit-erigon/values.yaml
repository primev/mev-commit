genesis:
  accountGeneration:
    enabled: false
    count: 10
    balance: "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD4A51000FDA0FFFF"
    password: "password123"
    timestamp: "0x0"
  url: "https://primev-infrastructure-artifacts.s3.us-west-2.amazonaws.com/genesis_mainenv-v1.2.0.json"

erigon:
  networkId: 57173
  datadir: "/data/erigon"
  ports:
    http: 8545
    ws: 8546
    authrpc: 8551
    metrics: 6061
    privateApi: 9095
    p2p: 30303
  api:
    http:
      enabled: true
      addr: "0.0.0.0"
      vhosts: "*"
      corsdomain: "*"
      api: "eth,erigon,engine,net,web3,txpool"
    ws:
      enabled: true
      addr: "0.0.0.0"
      vhosts: "*"
    metrics:
      enabled: true
      addr: "0.0.0.0"
  zeroFeeTxList:
    - "0x421657a89f467ac04c542e46645a7752e199b5e6"  # Contracts Deployer Keystore
    - "0x1c533735c11dd317bc816629f86e00f479d097a3"  # Oracle Keystore
    #- "0x929f3b326ea399cb953c18854733d6b894b9e819"  # Bridge Relayer Keystore
  pruneMode: "archive"
  nodiscover: true
  # Additional arguments to pass to erigon
  extraArgs:
    common:
      - --db.pagesize=16KB
      - --batchSize=4GB
      - --etl.bufferSize=4GB
      - --state.cache=8GB
      - --bodies.cache=64MB
      - --db.read.concurrency=32
      - --txpool.commit.every=60s   # Args applied to both leader and follower
    leader:
      - "--port=30303"
      - "--staticpeers=enode://502b2893d3de99fdd86f317c72c2da982c9df9e3edb2dcf9c8d1e014fd56d6d5d5602e1d841ad6f02c3caeb4d53295b0df47da5a18a004047a3188acb4676d61@erigon-snode-follower-erigon.dev.svc.cluster.local:30303"
      - "--trustedpeers=enode://502b2893d3de99fdd86f317c72c2da982c9df9e3edb2dcf9c8d1e014fd56d6d5d5602e1d841ad6f02c3caeb4d53295b0df47da5a18a004047a3188acb4676d61@erigon-snode-follower-erigon.dev.svc.cluster.local:30303"
    follower:
      - "--port=30303"
      - "--staticpeers=enode://674ce5dc5c6862ed6a91b32bbd196753a3ab329032a9a549a0cb3a20ab97da1ccae40ff6ef1bbab6e8bba62fc5924b9346354c5d63a5874522a2bc884c24a098@erigon-snode-leader-erigon.dev.svc.cluster.local:30304"
      - "--trustedpeers=enode://674ce5dc5c6862ed6a91b32bbd196753a3ab329032a9a549a0cb3a20ab97da1ccae40ff6ef1bbab6e8bba62fc5924b9346354c5d63a5874522a2bc884c24a098@erigon-snode-leader-erigon.dev.svc.cluster.local:30303"

consensus:
  liveness:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 2
  leader:
    instanceId: "snode-leader"
    apiAddr: ":9090"
    healthAddr: ":8080"
    priorityFeeRecipient: "0xcEc94aeB187321262BA8Ae5BB0A9D79EAd56da92"
    nonAuthRpcUrl: "http://localhost:8545"
    jwtSecret: "32c2902cc88b19b1c775ffef7e67673f296beb2e610f93230b40e5ef822ae9d4"
    
    # EVM build configuration
    evmBuildDelay: "1ms"
    evmBuildDelayEmptyBlock: "1m0s"
    txPoolPollingInterval: "5ms"
    
    # Logging configuration
    logLevel: "info"
    logFmt: "text"
    logTags: ""
    
    # Additional arguments - add storage backend here
    extraArgs:
      # Example PostgreSQL storage
      - "--postgres-dsn=postgres://mev_commit_consensus:nq9CQ8MSOrpDpIpXtvXq2k8rO61tl036YMYqCL8rlKLo784QYuIsOZaq1H4aJyJT@mev-commit-consensus-postgresql.dev.svc.cluster.local:5432/mev_commit_consensus?sslmode=disable"
      # Example Redis storage  
      #- "--redis-url=redis://consensus-redis.dev.svc.cluster.local:6379/0"

  follower:
    enabled: true
    replicaCount: 1
    
    instanceId: "snode-follower"
    healthAddr: ":8080"
    jwtSecret: "13373d9a0257983ad150392d7ddb2f9172c9396b4c450e26af469d123c7aaa5c"
    
    # Sync configuration
    syncBatchSize: 100
    
    # Logging configuration
    logLevel: "info"
    logFmt: "text"
    logTags: ""
    
    # Additional arguments - storage backend REQUIRED for followers
    extraArgs:
      # Example PostgreSQL storage (REQUIRED for followers)
      - "--postgres-dsn=postgres://mev_commit_consensus:nq9CQ8MSOrpDpIpXtvXq2k8rO61tl036YMYqCL8rlKLo784QYuIsOZaq1H4aJyJT@mev-commit-consensus-postgresql.dev.svc.cluster.local:5432/mev_commit_consensus?sslmode=disable"
      # Example Redis storage
      #- "--redis-url=redis://consensus-redis.dev.svc.cluster.local:6379/0"


image:
  erigon:
    repository: primev/primev
    tag: erigon-snode-v3.0.7-ms-patch
    pullPolicy: IfNotPresent
  snode:
    repository: primev/primev
    #tag: snode-consensus-v3.0.7-retry-fix
    #tag: snode-consensus-v3.0.7-fix-payload-update
    #tag: rc-1.2.0-pg-test-v4-snode
    tag: rc-1.2.0-rc-5-snode
    pullPolicy: IfNotPresent

storage:
  # Global defaults
  size: 200Gi
  storageClassName: openebs-hostpath
  accessMode: ReadWriteOnce
  
  # Leader-specific storage (optional overrides)
  leader:
    size: 500Gi                    # Larger storage for leader
    storageClassName: openebs-nvme2-disk2  # Faster storage class
  
  # Follower-specific storage (optional overrides)  
  follower:
    size: 500Gi                     # Smaller storage for followers
    storageClassName: openebs-nvme2-disk1     # Cheaper storage class


security:
  runAsUser: 0
  runAsGroup: 0
  runAsNonRoot: false
  fsGroup: 0

replicaCount: 1
terminationGracePeriodSeconds: 300

# Resource requests and limits
resources:
  erigon:
    requests:
      cpu: "1000m"
      memory: "32Gi"
    limits:
      cpu: "16000m"
      memory: "64Gi"
  snode:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "6000m"
      memory: "16Gi"

# Init container resources
initContainerResources:
  requests:
    cpu: "50m"
    memory: "100Mi"
  limits:
    cpu: "1000m"
    memory: "1Gi"

service:
  erigon:
    type: LoadBalancer
    ports:
      http: 8545
      ws: 8546
      authrpc: 8551
      metrics: 6061
    customSelector: {}
  snode:
    type: ClusterIP
    ports:
      api: 9090
      health: 8080
    customSelector: {}

nodeSelector: {}
tolerations: []
affinity: {}
topologySpreadConstraints: []

# Additional labels for StatefulSet
additionalLabels: {}

ingress:
  enabled: false
  className: "nginx"
  
  # Leader RPC Configuration
  rpc:
    host: dev-test.mev-commit.xyz
    path: /
    pathType: Prefix
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "1200"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "1200"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
  
  # Leader WebSocket Configuration  
  websocket:
    host: dev-test-wss.mev-commit.xyz
    path: /
    pathType: Prefix
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "36h00"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
      nginx.ingress.kubernetes.io/proxy-set-headers: |
        Connection "upgrade"
        Upgrade $http_upgrade
  
  # TLS Configuration
  tls:
    secretName: mev-commit-tls
  
  # Follower ingress (when follower.enabled=true)
  follower:
    enabled: false  # Set to true to expose follower via ingress
    
    rpc:
      host: "test-dev.mev-commit.xyz"
      path: /
      pathType: Prefix
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "1200"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "1200"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    websocket:
      host: "test-dev.mev-commit.xyz"
      path: /
      pathType: Prefix
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "36h00"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
        nginx.ingress.kubernetes.io/proxy-set-headers: |
          Connection "upgrade"
          Upgrade $http_upgrade
    
    tls:
      secretName: "mev-commit-tls"
