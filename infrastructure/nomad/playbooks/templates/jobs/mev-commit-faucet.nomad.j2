#jinja2: trim_blocks:True, lstrip_blocks:True
job "{{ job.name }}" {
  datacenters = ["{{ datacenter }}"]

  group "{{ job.name }}-group" {
    count = {{ job.count }}

    {% if env == 'devenv' %}
    restart {
      attempts = 0
      mode = "fail"
    }

    reschedule {
      attempts = 0
      unlimited = false
    }
    {% endif %}

    network {
      mode = "bridge"

      dns {
        servers = {{ (ansible_facts['dns']['nameservers'] + ['1.1.1.1']) | tojson }}
      }

      {% for port_name, port_details in job.ports[0].items() %}
      port "{{ port_name }}" {
        {% if port_details.get('static') %}
        static = {{ port_details['static'] }}
        {% endif %}
        {% if port_details.get('to') %}
        to = {{ port_details['to'] }}
        {% endif %}
      }
      {% endfor %}
    }

    {% for port_name in job.ports[0] %}
    service {
      name = "{{ job.name }}"
      port = "{{ port_name }}"
      tags = ["{{ port_name }}"]
      provider = "nomad"
    }
    {% endfor %}

    task "eth-faucet" {
      driver = "exec"

      artifact {
        source = "https://github.com/chainflag/eth-faucet/releases/download/v1.1.0/eth-faucet_1.1.0_Linux_{{ target_system_architecture }}.tar.gz"
      }

      template {
        data = <<-EOH
          {%- raw %}
          KEYSTORE_PATH="/local/data-{{ env "NOMAD_ALLOC_INDEX" }}/keystore"
          KEYSTORE_FILENAME="{{ with secret "secret/data/mev-commit" }}{{ .Data.data.{% endraw %}{{ job.artifacts | selectattr('keystore', 'defined') | map(attribute='keystore.name') | first }}{% raw %}_filename }}{{ end }}"
          {{- range nomadService "mev-commit-geth-bootnode1" }}
            {{- if contains "http" .Tags }}
          SETTLEMENT_RPC_ENDPOINT="http://{{ .Address }}:{{ .Port }}"
            {{- end }}
          {{- end }}
          HTTP_PORT="{% endraw %}{{ job.ports | selectattr('http', 'defined') | map(attribute='http.static') | first }}{% raw %}"
          {% endraw %}
        EOH
        destination = "secrets/.env"
        env = true
      }

      template {
        data = <<-EOH
          {%- raw %}
          {{ with secret "secret/data/mev-commit" }}{{ .Data.data.{% endraw %}{{ job.artifacts | selectattr('keystore', 'defined') | map(attribute='keystore.name') | first }}{% raw %}_password }}{{ end }}
          {% endraw %}
        EOH
        destination = "secrets/keystore_password.txt"
      }

      template {
        data = <<-EOH
          #!/usr/bin/env bash

          {% raw %}
          {{- range nomadService "datadog-agent-logs-collector" }}
            {{ if contains "tcp" .Tags }}
          exec > >(nc {{ .Address }} {{ .Port }}) 2>&1
            {{ end }}
          {{- end }}

          mkdir -p "${KEYSTORE_PATH}" > /dev/null 2>&1
          KEYSTORE_FILE="${KEYSTORE_PATH}/${KEYSTORE_FILENAME}"
            {{- with secret "secret/data/mev-commit" }}
          echo '{{ .Data.data.{% endraw %}{{ job.artifacts | selectattr('keystore', 'defined') | map(attribute='keystore.name') | first }}{% raw %} }}' > "${KEYSTORE_FILE}"
            {{ end }}

          chmod +x local/eth-faucet
          ./local/eth-faucet \
            --httpport "${HTTP_PORT}" \
            --faucet.amount 10 \
            --faucet.minutes 1 \
            --faucet.name "mev-commit chain" \
            --wallet.keyjson "${KEYSTORE_FILE}" \
            --wallet.keypass secrets/keystore_password.txt \
            --wallet.provider "${SETTLEMENT_RPC_ENDPOINT}"
          {% endraw %}
        EOH
        destination = "local/run.sh"
        perms = "0755"
      }

      config {
        command = "bash"
        args = ["-c", "local/run.sh"]
      }
    }
  }
}
