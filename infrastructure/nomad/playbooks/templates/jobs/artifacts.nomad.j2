#jinja2: trim_blocks:True, lstrip_blocks:True
job "artifacts-{{ environments[env].version }}" {
  datacenters = ["{{ datacenter }}"]

  {% if env != 'devenv' %}
  type = "batch"
  priority = 1

  # The cron corresponds to January 1st, 2100 and
  # it prevents the job from being run and cleaned up.
  periodic {
    cron = "0 0 1 1 6"
  }
  {% endif %}

  meta {
    CHAIN_ID = "{{ environments[env].chain_id }}"
    PROFILE = "{{ environments[env].profile }}"
    SECRETS = "{{ {'generate': 'generated', 'fetch': 'fetched'}.get(environments[env].secrets, 'unknown') }}"
    VERSION = "{{ environments[env].version }}"
    ARTIFACTS = "{{ 'built' if build_artifacts | default(false) else 'skipped' }}"
    TEMPLATES = "{{ 'built' if build_templates | default(false) else 'skipped' }}"
    TIMESTAMP = "{{ now(utc=true, fmt='%a %Y-%m-%d %H:%M:%S UTC') }}"
  }

  {% if env != 'devenv' %}
  group "info" {
    count = 1

    task "dummy" {
      driver = "exec"

      # Minimal resource allocation.
      resources {
        cpu = 1
        memory = 10
      }

      config {
        command = "true"
      }
    }
  }
  {% else %}
  group "artifacts-group" {
    count = 1

    restart {
      attempts = 0
      mode = "fail"
    }

    reschedule {
      attempts = 0
      unlimited = false
    }

    network {
      mode = "bridge"

      port "http" {
        static = 1111
        to = 1111
      }
    }

    volume "artifacts-volume" {
      type = "host"
      source = "artifacts-volume"
      read_only = true
    }

    task "artifacts" {
      driver = "exec"

      service {
        name = "artifacts"
        port = "http"
        tags = ["http"]
        provider = "nomad"
      }

      volume_mount {
        volume = "artifacts-volume"
        destination = "/local/artifacts"
        read_only = true
      }

      config {
        command = "python3"
        args = ["-m", "http.server", "1111", "--directory", "/local/artifacts"]
      }
    }
  }
  {% endif %}
}
