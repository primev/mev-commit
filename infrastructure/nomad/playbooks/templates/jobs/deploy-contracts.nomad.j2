#jinja2: trim_blocks:True, lstrip_blocks:True
job "{{ job.name }}" {
  datacenters = ["{{ datacenter }}"]
  type = "batch"

  group "{{ job.name }}-group" {
    count = {{ job.count }}
    restart {
      attempts = 0
      interval = "30m"
      delay = "15s"
      mode = "fail"
    }

    network {
      dns {
        servers = {{ (ansible_facts['dns']['nameservers'] + ['1.1.1.1']) | tojson }}
      }
    }

    task "deploy-create2" {
      driver = "exec"

      lifecycle {
        hook = "prestart"
      }

      artifact {
        source = "https://primev-infrastructure-artifacts.s3.us-west-2.amazonaws.com/mev-commit-geth_{{ version }}_Linux_x86_64.tar.gz"
      }

      template {
        data = <<-EOH
          #!/usr/bin/env bash

          {% raw %}
          {{- range nomadService "datadog-agent-logs-collector" }}
            {{ if contains "tcp" .Tags }}
          exec > >(nc {{ .Address }} {{ .Port }}) 2>&1
            {{ end }}
          {{- end }}

          {{- range nomadService "mev-commit-geth-bootnode1" }}
            {{ if contains "http" .Tags }}
          chmod +x local/deploy_create2.sh
          local/deploy_create2.sh "http://{{ .Address }}:{{ .Port }}"
            {{ end }}
          {{- end }}
          {% endraw %}

        EOH
        destination = "local/run.sh"
        perms = "0755"
      }

      config {
        command = "bash"
        args = ["-c", "local/run.sh"]
      }
    }

    task "deploy-contracts" {
      driver = "exec"

      artifact {
        source = "https://nodejs.org/dist/v18.16.1/node-v18.16.1-linux-x64.tar.xz"
        options {
          archive = false
        }
      }

      artifact {
        source = "https://foundry.paradigm.xyz"
        destination = "local/foundry.sh"
      }

      artifact {
        source = "https://primev-infrastructure-artifacts.s3.us-west-2.amazonaws.com/contracts_{{ version }}.tar.gz"
      }

      template {
        data = <<-EOH
          XDG_CONFIG_HOME="local/.config"
          {%- raw %}
          {{- range nomadService "mev-commit-geth-bootnode1" }}
            {{- if contains "http" .Tags }}
          RPC_URL="http://{{ .Address }}:{{ .Port }}"
            {{- end }}
          {{- end }}
          KEYSTORE_PASSWORD="{{ with secret "secret/data/mev-commit" }}{{ .Data.data.contract_deployer_keystore_password }}{{ end }}"
          {% endraw %}
          CHAIN_ID="{{ job['chain-id'] }}"
          DEPLOY_TYPE="core"
          SCRIPT_PATH_PREFIX="local/contracts/scripts/"
          CONTRACT_REPO_ROOT_PATH="local/contracts"
        EOH
        destination = "secrets/.env"
        env = true
      }

      template {
        data = <<-EOH
          #!/usr/bin/env bash

          {%- raw %}
          {{- range nomadService "datadog-agent-logs-collector" }}
            {{ if contains "tcp" .Tags }}
          exec > >(nc {{ .Address }} {{ .Port }}) 2>&1
            {{ end }}
          {{- end }}
          {% endraw %}

          tar \
            --extract \
            --file local/node-v18.16.1-linux-x64.tar.xz \
            --directory /usr/local \
            --strip-components=1

          chmod +x local/foundry.sh && local/foundry.sh
          chmod +x ${XDG_CONFIG_HOME}/.foundry/bin/foundryup && ${XDG_CONFIG_HOME}/.foundry/bin/foundryup
          export PATH="${XDG_CONFIG_HOME}/.foundry/bin:$PATH"

          forge clean
          chmod +x ${CONTRACT_REPO_ROOT_PATH}/entrypoint.sh && ${CONTRACT_REPO_ROOT_PATH}/entrypoint.sh
        EOH
        destination = "local/run.sh"
        perms = "0755"
      }

      config {
        command = "bash"
        args = ["-c", "local/run.sh"]
      }
    }
  }
}
