#jinja2: trim_blocks:True, lstrip_blocks:True
job "{{ job.name }}" {
  datacenters = ["{{ datacenter }}"]
  type = "batch"

  group "{{ job.name }}-group" {
    count = {{ job.count }}

    {% if env == 'devenv' %}
    restart {
      attempts = 0
      mode = "fail"
    }

    reschedule {
      attempts = 0
      unlimited = false
    }
    {% endif %}

    network {
      dns {
        servers = {{ (ansible_facts['dns']['nameservers'] + ['1.1.1.1']) | tojson }}
      }
    }

    task "funder" {
      driver = "exec"

      artifact {
        source = "https://foundry.paradigm.xyz"
        destination = "local/foundry.sh"
      }

      template {
        data = <<-EOH
          {%- raw %}
          XDG_CONFIG_HOME="local/.config"
          KEYSTORE_PATH="/local/data-{{ env "NOMAD_ALLOC_INDEX" }}/keystore"
          KEYSTORE_FILENAME="{{ with secret "secret/data/mev-commit" }}{{ .Data.data.{% endraw %}{{ job.target.artifacts | selectattr('keystores', 'defined') | map(attribute='keystores') | first | list | first }}{% raw %}_filename }}{{ end }}"
          KEYSTORE_PASSWORD="{{ with secret "secret/data/mev-commit" }}{{ .Data.data.{% endraw %}{{ job.target.artifacts | selectattr('keystores', 'defined') | map(attribute='keystores') | first | list | first }}{% raw %}_password }}{{ end }}"
          {% endraw %}
        EOH
        destination = "secrets/.env"
        env = true
      }

      template {
        data = <<-EOH
          #!/usr/bin/env bash

          chmod +x local/foundry.sh && local/foundry.sh
          chmod +x ${XDG_CONFIG_HOME}/.foundry/bin/foundryup
          ${XDG_CONFIG_HOME}/.foundry/bin/foundryup 2>&1
          if [ $? -ne 0 ]; then
            echo "Failed to install foundry tools"
            exit 1
          fi
          export PATH="${XDG_CONFIG_HOME}/.foundry/bin:$PATH"

          {% raw %}
          {{- range nomadService "datadog-agent-logs-collector" }}
            {{ if contains "tcp" .Tags }}
          exec > >(nc {{ .Address }} {{ .Port }}) 2>&1
            {{ end }}
          {{- end }}

          mkdir -p "${KEYSTORE_PATH}" > /dev/null 2>&1
          {{- with secret "secret/data/mev-commit" }}
          KEYSTORE_FILE="${KEYSTORE_PATH}/${KEYSTORE_FILENAME}"
          echo '{{ .Data.data.{% endraw %}{{ job.target.artifacts | selectattr('keystores', 'defined') | map(attribute='keystores') | first | list | first }}{% raw %} }}' > "${KEYSTORE_FILE}"
          {{ end }}

          {{- range nomadService "{% endraw %}{{ job.target.name }}{% raw %}" }}
            {{- range nomadService "mev-commit-geth-bootnode1" }}
              {{- if contains "http" .Tags }}
          ADDRESS=$(cat "${KEYSTORE_FILE}" | jq -r '.address')
          cast send \
            --keystore "${KEYSTORE_FILE}" \
            --password "${KEYSTORE_PASSWORD}" \
            --priority-gas-price 2000000000 \
            --gas-price 5000000000 \
            --value 1000ether \
            --rpc-url http://{{ .Address }}:{{ .Port }} \
            "${ADDRESS}"

            if [ $? -eq 0 ]; then
              echo "Funds successfully sent to: ${ADDRESS}"
            else
              echo "Failed to send funds to: ${ADDRESS}"
              exit 1
            fi
              {{- end }}
            {{- end }}
          {{- end }}
          {% endraw %}
        EOH
        destination = "local/run.sh"
        change_mode = "noop"
        perms = "0755"
      }

      config {
        command = "bash"
        args = ["-c", "exec local/run.sh"]
      }
    }
  }
}
