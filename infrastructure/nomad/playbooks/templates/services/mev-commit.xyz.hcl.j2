#jinja2: trim_blocks:True, lstrip_blocks:True
server {
    listen 443 ssl http2;

    ssl_certificate {{ certificates_dir }}/{{ env }}.{{ environments[env].domain }}.crt;
    ssl_certificate_key {{ private_keys_dir }}/{{ env }}.{{ environments[env].domain }}.key;

    server_name bootnode.{{ environments[env].domain }};

    location / {
        proxy_pass https://{{ nomad_server_ip }}:13523;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl http2;

    ssl_certificate {{ certificates_dir }}/{{ env }}.{{ environments[env].domain }}.crt;
    ssl_certificate_key {{ private_keys_dir }}/{{ env }}.{{ environments[env].domain }}.key;

    server_name provider.{{ environments[env].domain }};

    location / {
        proxy_pass https://{{ nomad_server_ip }}:13533;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl http2;

    ssl_certificate {{ certificates_dir }}/{{ env }}.{{ environments[env].domain }}.crt;
    ssl_certificate_key {{ private_keys_dir }}/{{ env }}.{{ environments[env].domain }}.key;

    server_name chainrpc.{{ environments[env].domain }};

    location / {
        proxy_pass http://{{ nomad_server_ip }}:8545;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl http2;

    ssl_certificate {{ certificates_dir }}/{{ env }}.{{ environments[env].domain }}.crt;
    ssl_certificate_key {{ private_keys_dir }}/{{ env }}.{{ environments[env].domain }}.key;

    server_name chainrpc-wss.{{ environments[env].domain }};

    location / {
        proxy_pass http://{{ nomad_server_ip }}:8546;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl http2;

    ssl_certificate {{ certificates_dir }}/{{ env }}.{{ environments[env].domain }}.crt;
    ssl_certificate_key {{ private_keys_dir }}/{{ env }}.{{ environments[env].domain }}.key;

    server_name faucet.{{ environments[env].domain }};

    location / {
        proxy_pass http://{{ nomad_server_ip }}:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl http2;

    ssl_certificate {{ certificates_dir }}/{{ env }}.{{ environments[env].domain }}.crt;
    ssl_certificate_key {{ private_keys_dir }}/{{ env }}.{{ environments[env].domain }}.key;

    server_name contracts.{{ environments[env].domain }};

    location / {
	rewrite ^/contracts.json$ /contracts.json break;
        proxy_pass http://{{ nomad_server_ip }}:1010/contracts.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
