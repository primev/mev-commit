name: infrastructure

on:
  workflow_run:
    workflows:
      - ci
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  cluster:
    name: Setup and Test Nomad devnet Cluster
    runs-on: ubuntu-22.04
    timeout-minutes: 120
#    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: ${{ github.event.workflow_run.head_branch }}

    - name: Install Dependencies
      run: |
        echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
        sudo apt-get update
        sudo apt-get install --yes goreleaser
        
        pip install boto3 botocore
        pipx inject ansible-core botocore boto3

    - name: Configure Machine
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region us-west-2

        cat <<-EOH > infrastructure/nomad/hosts.ini
        [nomad_servers]
        127.0.0.1 ansible_connection=local ansible_user=${USER}

        [nomad_clients]
        127.0.0.1 ansible_connection=local ansible_user=${USER}
        EOH

        ansible-inventory --inventory infrastructure/nomad/hosts.ini hosts.ini --list --yaml
        ansible all --inventory infrastructure/nomad/hosts.ini --module-name ping

    - name: Initialize and Configure Cluster
      run: |
        ./cluster.sh init --profile ci --debug
      working-directory: infrastructure/nomad

    - name: Build Artifacts and Deploy Jobs
      run: |
        ./cluster.sh deploy --profile ci --debug
      working-directory: infrastructure/nomad

    - name: Destroy Cluster
      run: |
        ./cluster.sh destroy --profile ci --debug
      working-directory: infrastructure/nomad

    - name: Initialize Debug Shell
      if: failure()
      run: |
        KEYS=$(curl -sSf -X POST https://eu.relay.tunshell.com/api/sessions)
        echo "::add-mask::${KEYS}"
        echo "Debug Shell:"
        echo "sh <(curl -sSf https://lets.tunshell.com/init.sh) L $(echo ${KEYS} | jq -r .peer2_key) \${TUNSHELL_SECRET} eu.relay.tunshell.com"
        curl -sSf https://lets.tunshell.com/init.sh | sh -s -- T $(echo ${KEYS} | jq -r .peer1_key) ${{ secrets.TUNSHELL_SECRET }} eu.relay.tunshell.com
